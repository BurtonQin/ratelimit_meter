# TemplateCIConfig { bench: BenchEntry(MatrixEntry { run: true, version: "stable", install_commandline: None, commandline: "cargo bench" }), clippy: ClippyEntry(MatrixEntry { run: true, version: "stable", install_commandline: Some("rustup component add clippy"), commandline: "cargo clippy -- -D warnings" }), rustfmt: RustfmtEntry(MatrixEntry { run: true, version: "stable", install_commandline: Some("rustup component add rustfmt"), commandline: "cargo fmt -v -- --check" }), additional_matrix_entries: {"no_std": CustomEntry(MatrixEntry { run: true, version: "nightly", install_commandline: None, commandline: "cargo +nightly test --no-default-features --features no_std" })}, cache: "cargo", os: "linux", dist: "xenial", versions: ["stable", "nightly"], test_commandline: "cargo test --verbose --all", scheduled_test_branches: ["master"], test_schedule: "0 0 * * 0" }
version: "2.1"

executors:
  stable:
    docker:
      - image: liuchong/rustup:stable
  nightly:
    docker:
      - image: liuchong/rustup:nightly
  beta:
    docker:
      - image: liuchong/rustup:beta

commands:
  cargo_test:
    description: "Run `cargo test`"
    steps:
      - run:
          name: "Clean out rust-toolchain"
          command: "rm -f rust-toolchain"
      - run:
          name: "Toolchain debug info"
          command: "rustc --version"
      - run:
          name: Test
          command: cargo test --verbose --all

jobs:
  test:
    parameters:
      version:
        type: executor
      version_name:
        type: string
    executor: << parameters.version >>
    environment:
      CI_RUST_VERSION: << parameters.version_name >>
    steps:
      - checkout
      - cargo_test

  rustfmt:
    parameters:
      version:
        type: executor
    executor: << parameters.version >>
    steps:
      - checkout
      - run:
          name: Install
          command: rustup component add rustfmt
      - run:
          name: Rustfmt
          command: cargo fmt -v -- --check

  clippy:
    parameters:
      version:
        type: executor
    executor: << parameters.version >>
    steps:
      - checkout
      - run:
          name: Install
          command: rustup component add clippy
      - run:
          name: Clippy
          command: cargo clippy -- -D warnings

  bench:
    parameters:
      version:
        type: executor
    executor: << parameters.version >>
    steps:
      - checkout
      - run:
          name: Bench
          command: cargo bench
  no_std:
    parameters:
      version:
        type: executor
      version_name:
        type: string
    executor: << parameters.version >>
    environment:
      CI_RUST_VERSION: << parameters.version_name >>
    steps:
      - checkout
      - run:
          name: cargo +nightly test --no-default-features --features no_std
          command: cargo +nightly test --no-default-features --features no_std

  ci_success:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Success
          command: "echo yay"

workflows:
  continuous_integration:
    jobs:
      - test:
          name: test-stable
          version: stable
          version_name: stable
          filters: {
  "branches": {
    "ignore": [
      "/.*\\.tmp/"
    ]
  },
  "tags": {
    "only": [
      "/^v\\d+\\.\\d+\\.\\d+.*$/"
    ]
  }
}
      - test:
          name: test-nightly
          version: nightly
          version_name: nightly
          filters: {
  "branches": {
    "ignore": [
      "/.*\\.tmp/"
    ]
  },
  "tags": {
    "only": [
      "/^v\\d+\\.\\d+\\.\\d+.*$/"
    ]
  }
}
      - rustfmt:
          version: stable
          filters: {
  "branches": {
    "ignore": [
      "/.*\\.tmp/"
    ]
  },
  "tags": {
    "only": [
      "/^v\\d+\\.\\d+\\.\\d+.*$/"
    ]
  }
}
      - clippy:
          version: stable
          filters: {
  "branches": {
    "ignore": [
      "/.*\\.tmp/"
    ]
  },
  "tags": {
    "only": [
      "/^v\\d+\\.\\d+\\.\\d+.*$/"
    ]
  }
}
      - bench:
          version: stable
          filters: {
  "branches": {
    "ignore": [
      "/.*\\.tmp/"
    ]
  },
  "tags": {
    "only": [
      "/^v\\d+\\.\\d+\\.\\d+.*$/"
    ]
  }
}
      - no_std:
          name: "no_std"
          version: nightly
          version_name: nightly
      - ci_success:
          requires:
          - test-stable
          - test-nightly
          - rustfmt
          - clippy
          - bench
          - no_std
  scheduled_tests:
    jobs:
      - test:
          name: test-stable
          version: stable
          version_name: stable
      - test:
          name: test-nightly
          version: nightly
          version_name: nightly
    triggers:
      - schedule:
          cron: 0 0 * * 0
          filters:
            branches:
              only: [
  "master"
]
